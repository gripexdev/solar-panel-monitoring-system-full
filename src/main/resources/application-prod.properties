spring.application.name=solar-monitoring-backend
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Database configuration (will be set by environment variables)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Server configuration
server.port=${PORT:8080}
server.address=0.0.0.0

# MQTT Configuration (will be set by environment variables)
mqtt.broker.url=${MQTT_BROKER_URL:ssl://z8865828.ala.us-east-1.emqxsl.com:8883}
mqtt.client.id=solar-backend-${random.uuid}
mqtt.username=${MQTT_USERNAME:othmane}
mqtt.password=${MQTT_PASSWORD:othmane}
mqtt.topic.sensor-data=solar/sensor/data
mqtt.topic.control=solar/control
mqtt.topic.plant-requirements=solar/plant/requirements

# Connection settings
mqtt.connection.timeout=30
mqtt.keepalive.interval=60

# Management metrics configuration
management.metrics.export.simple.enabled=false
management.metrics.enable.process=false
management.metrics.enable.system=false
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator

# Health check configuration
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=false

# Logging configuration
logging.level.root=INFO
logging.level.com.example.solarpanelmonitoringsystem=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot=INFO
logging.level.org.springframework.context=INFO 